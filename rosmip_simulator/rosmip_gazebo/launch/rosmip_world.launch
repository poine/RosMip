<?xml version="1.0"?>
<launch>
  <arg name="start_gazebo" default="true" />
  <arg name="use_sim_time" default="true" />
  <arg name="gz_gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="world_path" default="$(find rosmip_gazebo)/worlds/empty.world" />
  <arg name="paused" default="false" />
  
  <arg name="robot_name" default="rosmip_1"/>
  <arg name="robot_initial_loc" default="-x 0.5 -y 0.5 -z 0.04"/>
  <arg name="robot_initial_ori" default="-R 0 -P 0 -Y 0"/>
  <!-- use this when not using a kalman filter for odometry fusion-->
  <arg name="controller_enable_odom_tf" default="true" />
       
  <!-- Launch Gazebo with the specified world -->
  <group if="$(arg start_gazebo)">
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="debug" value="0" />
      <arg name="gui" value="$(arg gz_gui)" />
      <arg name="use_sim_time" value="$(arg use_sim_time)" />
      <arg name="headless" value="$(arg headless)" />
      <arg name="world_name" value="$(arg world_path)" />
      <arg name="paused" value="$(arg paused)" />
    </include>
  </group>

  <!-- Load ROSMip's description -->
  <include file="$(find rosmip_description)/launch/description.launch">
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>

  <!-- Spawn ROSMip -->
  <node name="$(arg robot_name)_urdf_spawner" pkg="gazebo_ros" type="spawn_model"
	args="-urdf -model $(arg robot_name) -param  $(arg robot_name)/robot_description
	      $(arg robot_initial_loc) $(arg robot_initial_ori) -robot_namespace $(arg robot_name)" />

  <!-- start balance controller -->
  <!-- <include file="$(find rosmip_control)/launch/control_balance.launch"> -->
  <include file="$(find rosmip_control)/launch/control_legacy.launch">
    <arg name="enable_odom_tf" value="$(arg controller_enable_odom_tf)" />
    <arg name="robot_name" value="$(arg robot_name)" />
  </include>
  
  <!-- Unpause Gazebo -->>
  <group if="$(arg paused)">
    <node pkg="rosservice" type="rosservice" name="unpause_gazebo" args="call --wait gazebo/unpause_physics"/>
  </group>
</launch>
